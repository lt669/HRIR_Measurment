% Script will compute a dual-band Ambisonic decode: Basic (max-rV) decode
% below 700Hz and max-rE decode above 700Hz. Script will also output
% seperate full-spectrum basic and max-rE files.
%
% Written by Calum Armstrong, Department of Electronics, The University 
% of York.

%% Code

% Basic Decode
lo = asxDecoder('speechmix_Aformat_sn3dHOA_NoiseSupress.wav',... 
                'HRTFs/48K_24bit_KEMAR_DFC',... 
                'lo_fq',... 
                1,... 
                '3d',... 
                'sn3d',...
                'pinv',...
                'basic');

% Max-rE Decode
hi = asxDecoder('speechmix_Aformat_sn3dHOA_NoiseSupress.wav',... 
                'HRTFs/48K_24bit_KEMAR_DFC',...
                'hi_fq',...
                1,...
                '3d',...
                'sn3d',...
                'pinv',...
                'maxre');

% Filter settings
lc = 650;   % lower transition cut-off
hc = 750;   % higher transition cut-off
Ap = 1;     % Pass-band ripple
Ast = 100;  % Stop-band attenuation
Fs = 48000; % Sampling Frequency

% Low-pass filter
lp = designfilt('lowpassfir','PassbandFrequency',lc,...
  'StopbandFrequency',hc,'PassbandRipple',Ap,...
  'StopbandAttenuation',Ast,'SampleRate',Fs,...
  'designMethod', 'kaiserwin');

% High-pass filter
hp = designfilt('highpassfir','PassbandFrequency',hc,...
  'StopbandFrequency',lc,'PassbandRipple',Ap,...
  'StopbandAttenuation',Ast,'SampleRate',Fs,...
  'designMethod', 'kaiserwin');

% Analyse / view filter responces
    % fvtool(lp, hp)

% Filter binaural decodes
lolp = filter(lp, lo);
hihp = filter(hp, hi);

% Combine low-freq basic and high-freq max-rE
output = lolp + hihp;

% Output binaural file
audiowrite('Bi_dual_band_maxrE_example.wav', output, 48000);